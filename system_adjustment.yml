- name: Prompt Adjustment
  hosts: all
  gather_facts: false
  become: true
  remote_user: ansible
  become_method: sudo
  tasks:
    - name: neofetch - package installation
      dnf:
        name:
          - neofetch

    - name: neofetch - enable on profile
      lineinfile:
        path: /etc/profile.d/nice_motd.sh
        create: yes
        line: neofetch --disable packages

    - name: command history - insert a line with HISTTIMEFORMAT to /etc/profile.d/shell_configuration.sh
      lineinfile:
        create: yes
        path: /etc/profile.d/shell_configuration.sh
        line: export HISTTIMEFORMAT='%h/%d %H:%M:%S '

    - name: command history - insert a line with HISTSIZE to /etc/profile.d/shell_configuration.sh
      lineinfile:
        path: /etc/profile.d/shell_configuration.sh
        line: export HISTSIZE=9999

    - name: prompt settings - insert a line with color prompt to /etc/profile.d/shell_configuration.sh
      lineinfile:
        dest: /etc/profile.d/shell_configuration.sh
        line: '{{ item }}'
      with_items:
        - 'NORMAL="\[\e[0m\]"'
        - 'RED="\[\e[1;31m\]"'
        - 'GREEN="\[\e[1;32m\]"'
        - 'if [[ $EUID == 0 ]] ; then'
        - '  PS1="$RED\u@\h [ $NORMAL\w$RED ]# $NORMAL"'
        - 'else'
        - '  PS1="$GREEN\u@\h [ $NORMAL\w$GREEN ]\$ $NORMAL"'
        - 'fi'

    - name: vim configuration - insert a line with colorscheme for vim editior to /etc/vimrc
      lineinfile:
        path: /etc/vimrc
        line: colorscheme desert


    - name: session configuration - insert a line with sessiontimeout  to /etc/profile.d/shell_configuration.sh
      lineinfile:
        dest: /etc/profile.d/shell_configuration.sh
        line: '{{ item }}'
      with_items:
        - 'SESSTIMEOUT=3600 '
        - 'readonly SESSTIMEOUT'
        - 'export SESSTIMEOUT'


    - name: blacklist i2c_piix4
      lineinfile:
        path: /etc/modprobe.d/no_i2c_piix4.conf
        create: yes
        line: blacklist i2c_piix4

    - name: disable transparent_hugepage in /etc/default/grub
      lineinfile:
        state: present
        dest: /etc/default/grub
        backrefs: yes
        regexp: '^(GRUB_CMDLINE_LINUX=(?!.* transparent_hugepage)\"[^\"]+)(\".*)'
        line: '\1 transparent_hugepage=never\2'

    - name: check if rebuild grub is needed, maybe entry was already done previously, so no rebuild is needed
      command: "find /etc/default/grub -cmin -10"
      register: grub_out

    - name: write grub configuration file
      command: "{{ item }}"
      with_items:
        - grub2-mkconfig -o /boot/grub2/grub.cfg
        - dracut -v -f
      when: grub_out.stdout | regex_search('grub')        